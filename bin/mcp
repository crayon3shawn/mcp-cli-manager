#!/usr/bin/env zsh

# Import modules
SCRIPT_DIR="${0:A:h}"
source "${SCRIPT_DIR}/../lib/core/env.zsh"
source "${SCRIPT_DIR}/../lib/core/log.zsh"
source "${SCRIPT_DIR}/../lib/config/loader.zsh"
source "${SCRIPT_DIR}/../lib/process/manager.zsh"

# Print usage
print_usage() {
    cat << EOF
Usage: $(basename "$0") <command> [options]

Commands:
  init                    Initialize configuration files
  list                    List all configured servers
  get <server>            Display server configuration details
  add <server>            Add a new server configuration
  remove <server>         Remove server configuration
  import <file>           Import configuration file
  start <server>          Start server
  stop <server>           Stop server
  restart <server>        Restart server
  status <server>         Check server status

Options:
  -h, --help            Show help information
  -v, --version         Show version information
EOF
}

# Main
case "${1:-}" in
    "init")
        init_config
        ;;
    "list")
        list_servers
        ;;
    "get")
        if [[ -z "${2:-}" ]]; then
            log_error "Server name required" \
                     "Usage: $(basename "$0") get <server>" \
                     "Use '$(basename "$0") list' to view available servers"
            exit 1
        fi
        get_server_config "$2"
        ;;
    "add")
        if [[ -z "${2:-}" ]]; then
            log_error "Server name required" \
                     "Usage: $(basename "$0") add <server>" \
                     "Example: $(basename "$0") add my-server"
            exit 1
        fi
        add_server_config "$2"
        ;;
    "remove")
        if [[ -z "${2:-}" ]]; then
            log_error "Server name required" \
                     "Usage: $(basename "$0") remove <server>" \
                     "Use '$(basename "$0") list' to view available servers"
            exit 1
        fi
        remove_server_config "$2"
        ;;
    "import")
        if [[ -z "${2:-}" ]]; then
            log_error "Configuration file path required" \
                     "Usage: $(basename "$0") import <file>" \
                     "Example: $(basename "$0") import ./my-config.json"
            exit 1
        fi
        import_config "$2"
        ;;
    "start")
        if [[ -z "${2:-}" ]]; then
            log_error "Server name required" \
                     "Usage: $(basename "$0") start <server>" \
                     "Use '$(basename "$0") list' to view available servers"
            exit 1
        fi
        start_server "$2"
        ;;
    "stop")
        if [[ -z "${2:-}" ]]; then
            log_error "Server name required" \
                     "Usage: $(basename "$0") stop <server>" \
                     "Use '$(basename "$0") list' to view available servers"
            exit 1
        fi
        stop_server "$2"
        ;;
    "restart")
        if [[ -z "${2:-}" ]]; then
            log_error "Server name required" \
                     "Usage: $(basename "$0") restart <server>" \
                     "Use '$(basename "$0") list' to view available servers"
            exit 1
        fi
        restart_server "$2"
        ;;
    "status")
        if [[ -z "${2:-}" ]]; then
            check_all_servers
        else
            check_server_status "$2"
        fi
        ;;
    "--help"|"-h")
        print_usage
        exit 0
        ;;
    "--version"|"-v")
        echo "MCP CLI Manager v${VERSION}"
        exit 0
        ;;
    "")
        print_usage
        exit 1
        ;;
    *)
        log_error "Unknown command: $1" \
                 "Command not recognized" \
                 "Use '$(basename "$0") --help' to see available commands"
        exit 1
        ;;
esac