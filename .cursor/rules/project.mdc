---
description: 
globs: 
alwaysApply: true
---
rules:
  - name: "Shell 腳本規範"
    description: "Shell 腳本開發規範和最佳實踐"
    pattern: "**/*.sh"
    rule: |
      我會幫助你：
      1. 遵循 Google Shell Style Guide
      2. 使用英文撰寫註釋：
         - 函數和模塊頂部必須有功能描述
         - 複雜邏輯需要行內註釋
         - 使用清晰的命名約定
      3. 錯誤處理：
         - 使用英文錯誤信息
         - 包含 Reason 和 Solution
         - 使用標準錯誤前綴 [ERROR], [WARN] 等
      4. 目錄結構：
         bin/ - 可執行文件
         lib/ - 核心邏輯
         tests/ - 測試文件

  - name: "配置文件規範"
    description: "YAML 配置文件的格式和結構規範"
    pattern: "**/*.{yaml,yml}"
    rule: |
      我會確保：
      1. 使用 YAML 格式
      2. 遵循 XDG 基礎目錄規範
      3. 支持多環境配置
      4. 配置結構清晰
      5. 包含必要的註釋說明

  - name: "文檔規範"
    description: "文檔編寫規範"
    pattern: "**/*.md"
    rule: |
      我會幫助你：
      1. 語言使用：
         - 開發文檔：繁體中文
         - 用戶文檔：英文與中文
      2. 文檔結構：
         - 使用清晰的標題層級
         - 包含必要的示例
         - 代碼塊標註語言
      3. 文檔類型：
         - 技術文檔
         - 用戶指南

  - name: "測試規範"
    description: "測試文件的編寫規範"
    pattern: "tests/**/*.sh"
    rule: |
      我會確保：
      1. 使用 shunit2/bats 進行單元測試
      2. 測試覆蓋：
         - 配置管理
         - 進程控制
         - 工具函數
      3. 測試命名規範
      4. 包含測試描述和預期結果

  - name: "版本發布規範"
    description: "版本發布和變更管理規範"
    pattern: "**/CHANGELOG.md"
    rule: |
      我會幫助你：
      1. 版本號規範：major.minor.patch
      2. 發布檢查清單：
         - 單元測試通過
         - 文檔更新
         - 更新日誌
         - 版本標籤
      3. 變更日誌格式規範

  - name: "安全規範"
    description: "代碼安全性規範"
    pattern: "**/*.{sh,yaml,yml}"
    rule: |
      我會確保：
      1. 不在代碼中硬編碼敏感信息
      2. 使用環境變量存儲配置
      3. 正確處理權限問題
      4. 安全的錯誤處理
      5. 日誌安全性